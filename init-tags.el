;;; init-tags.el --- TAGS

;;; Commentary:
;; 

;;; Code:

(defun init-tags/enable-ggtags ()
  "Enable ggtags in cc derived modes."
  (setq-local eldoc-documentation-function #'ggtags-eldoc-function)
  (setq-local imenu-create-index-function #'ggtags-build-imenu-index)
  (setq-local hippie-expand-try-functions-list
              (cons 'ggtags-try-complete-tag hippie-expand-try-functions-list))
  (ggtags-mode 1))

(use-package ggtags
  :ensure t
  :custom
  (ggtags-use-idutils t)
  :hook
  (c-mode . init-tags/enable-ggtags)
  (c-ts-mode . init-tags/enable-ggtags)
  (c++-mode . init-tags/enable-ggtags)
  (c++-ts-mode . init-tags/enable-ggtags)
  (c-or-c++-mode . init-tags/enable-ggtags)
  (c-or-c++-ts-mode . init-tags/enable-ggtags)
  (csharp-mode . init-tags/enable-ggtags)
  (csharp-ts-mode . init-tags/enable-ggtags)
  (java-mode . init-tags/enable-ggtags)
  (java-ts-mode . init-tags/enable-ggtags))

(use-package citre
  :defer t
  :init
  ;; This is needed in `:init' block for lazy load to work.
  (require 'citre-config)
  ;; Bind your frequently used commands.  Alternatively, you can define them
  ;; in `citre-mode-map' so you can only use them when `citre-mode' is enabled.
  (global-set-key (kbd "C-x c j") 'citre-jump)
  (global-set-key (kbd "C-x c J") 'citre-jump-back)
  (global-set-key (kbd "C-x c p") 'citre-ace-peek)
  (global-set-key (kbd "C-x c u") 'citre-update-this-tags-file)
  :config
  (setq
   ;; Set this if you use project management plugin like projectile.  It's
   ;; used for things like displaying paths relatively, see its docstring.
   citre-project-root-function #'projectile-project-root
   ;; Set this if you want to always use one location to create a tags file.
   citre-default-create-tags-file-location 'global-cache
   ;; Set this if you'd like to use ctags options generated by Citre
   ;; directly, rather than further editing them.
   citre-edit-ctags-options-manually nil
   ;; If you only want the auto enabling citre-mode behavior to work for
   ;; certain modes (like `prog-mode'), set it like this.
   citre-auto-enable-citre-mode-modes '(prog-mode)))

(use-package xcscope
  :ensure t
  :defer t
	:config
	(cscope-setup))

(provide 'init-tags)
;;; init-tags.el ends here
